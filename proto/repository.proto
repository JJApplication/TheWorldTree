syntax = "proto3";

package proto;

option go_package = "./proto";

import "google/protobuf/timestamp.proto";

service RepositoryService {
  rpc GetRepositories(GetRepositoriesRequest) returns (GetRepositoriesResponse);
  rpc GetRepository(GetRepositoryRequest) returns (GetRepositoryResponse);
  rpc SyncRepositories(SyncRepositoriesRequest) returns (SyncRepositoriesResponse);
  rpc GetCommits(GetCommitsRequest) returns (GetCommitsResponse);
  rpc SyncCommits(SyncCommitsRequest) returns (SyncCommitsResponse);
}

message Repository {
  int32 id = 1;
  string name = 2;
  string full_name = 3;
  string description = 4;
  string url = 5;
  string language = 6;
  int32 stars = 7;
  int32 forks = 8;
  google.protobuf.Timestamp created_at = 9;
  google.protobuf.Timestamp updated_at = 10;
  google.protobuf.Timestamp synced_at = 11;
}

message Commit {
  int32 id = 1;
  string sha = 2;
  string message = 3;
  string author_name = 4;
  string author_email = 5;
  google.protobuf.Timestamp commit_date = 6;
  string repository_full_name = 7;
  google.protobuf.Timestamp synced_at = 8;
}

message GetRepositoriesRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message GetRepositoriesResponse {
  repeated Repository repositories = 1;
  int32 total = 2;
}

message GetRepositoryRequest {
  string full_name = 1;
}

message GetRepositoryResponse {
  Repository repository = 1;
}

message SyncRepositoriesRequest {
  repeated string repository_urls = 1;
}

message SyncRepositoriesResponse {
  string message = 1;
  int32 synced_count = 2;
}

message GetCommitsRequest {
  string repository_full_name = 1;
  int32 limit = 2;
  int32 offset = 3;
}

message GetCommitsResponse {
  repeated Commit commits = 1;
  int32 total = 2;
}

message SyncCommitsRequest {
  string repository_full_name = 1;
  int32 limit = 2; // default 50
}

message SyncCommitsResponse {
  string message = 1;
  int32 synced_count = 2;
}